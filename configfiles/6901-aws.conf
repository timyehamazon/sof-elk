# SOF-ELKÂ® Configuration File
# (C)2021 Lewes Technology Consulting, LLC
#
# This file parses JSON-formatted AWS logs

filter {
  if [type] == "aws" {
    date {
      match => [ "[raw][eventTime]", "ISO8601" ]
    }

    mutate {
      rename => {
        "[raw][eventName]" => "event_name"
        "[raw][eventSource]" => "event_source"
        "[raw][awsRegion]" => "aws_region"
        "[raw][sourceIPAddress]" => "source_host"
        "[raw][requestID]" => "request_guid"
        "[raw][eventID]" => "event_guid"
        "[raw][eventType]" => "event_type"
        "[raw][additionalEventData][bytesTransferredIn]" => "bytes_in"
        "[raw][additionalEventData][bytesTransferredOut]" => "bytes_out"
        "[raw][userIdentity][accessKeyId]" => "access_key_id"
        "[raw][userIdentity][type]" => "user_type"
        "[raw][userIdentity][arn]" => "arn"
        "[raw][userIdentity][username]" => "username"
        "[raw][userIdentity][sessionContext]" => "raw_session_context"
        "[raw][requestParameters][bucketName]" => "bucket_name"
        "[raw][requestParameters][Host]" => "hostname"
        "[raw][requestParameters][instanceType]" => "instance_type"
        "[raw][requestParameters][instancesSet][items][0][instanceId]" => "instance_id"
        "[raw][requestParameters][instancesSet][items][0][imageId]" => "image_id"
        "[raw][requestParameters][instancesSet][items][0][keyName]" => "key_name"
        "[raw][responseElements]" => "raw_response_elements"
        "[raw][resources][0][ARN]" => "aws_resource_name"
        "[raw][resources][0][type]" => "aws_resource_type"
        "[raw][userAgent]" => "useragent"
      }
      add_tag => [ "aws_log" ]
    }

    # renaming this in a separate mutate{} stanza so the other requestParameters fields are already separated out
    mutate {
      rename => {
        "[raw][requestParameters]" => "raw_request_parameters"
      }
    }

    json_encode {
      source => "raw_request_parameters"
    }
    if [raw_request_parameters] == "null" or [raw_request_parameters] == "{}" {
      mutate {
        remove_field => [ "raw_request_parameters" ]
      }
    }
    json_encode {
      source => "raw_response_elements"
    }
    if [raw_response_elements] == "null" or [raw_response_elements] == "{}" {
      mutate {
        remove_field => [ "raw_response_elements" ]
      }
    }
    json_encode {
      source => "raw_session_context"
    }
    if [raw_session_context] == "null" or [raw_session_context] == "{}" {
      mutate {
        remove_field => [ "raw_session_context" ]
      }
    }

    # if the source_host field is an IP address, create a new source_ip with the same content
    grok {
      patterns_dir => [ "/usr/local/sof-elk/grok-patterns" ]
      match => [ "source_host", "^%{IP:source_ip}$" ]
      tag_on_failure => [ ]
    }

    # remove remaining fields
    mutate {
      remove_field => [ "raw" ]
    }
  }
}
