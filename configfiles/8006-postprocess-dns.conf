filter {
  # Used for whois lookups - can create log loop
  if [query] =~ "^whois\." {
    drop { }
  }

  # REPLACE test.int with your internal domain
  if [query] and [query] !~ "\.test\.int$" {
    mutate {
      lowercase => [ "query" ]
    }
    if [query_type_name] == "A" or [query_type_name] == "AAAA" {
      # tld {
      #   source => "query"
      # }
      ruby {
        code => "event['query_length'] = event['query'].length"
      }
      mutate {
        rename => {
          "[SubLog][sessionid]" => "sub_session_id"
          "[tld][domain]" => "highest_registered_domain"
          "[tld][trd]" => "subdomain"
          "[tld][tld]" => "top_level_domain"
          "[tld][sld]" => "parent_domain"
        }
      }
      if [parent_domain] {
        ruby {
          code => "event['parent_domain_length'] = event['parent_domain'].length"
        }
      }
      if [subdomain] {
        ruby {
          code => "event['subdomain_length'] = event['subdomain'].length"
        }
      }
    }
  }
}
